openapi: 3.0.0

info:
  title: "Commitments API"
  description: |
    Endpoints and schemas for issuing proposer commitments and relevent helper functions.
  version: "v0.0.1 - Ethereum Commitments API Specification v0.0.1"
  contact:
    name: Ethereum Commitments Github
    url: https://github.com/eth-fabric/commitments-specs/issues
  license:
    name: "MIT License and Apache 2.0 License"
    url: "https://github.com/eth-fabric/commitments-specs/"

servers:
  - url: "{server_url}"
    variables:
      server_url:
        description: "Commitments API URL"
        default: "http://localhost/"

tags:
  - name: "Commitments API"
    description: "Endpoints and schemas for issuing proposer commitments and relevent helper functions."

x-constants:
  MAX_CONSTRAINTS_PER_SLOT: 32

paths:
  /commitmentRequest:
    post:
      operationId: "commitmentRequest"
      tags:
        - Commitments API
      summary: "Request a new SignedCommitment"
      description: |
        JSON-RPC endpoint for requesting a new `SignedCommitment`.
        
        A `CommitmentRequest` contains an opaque `payload` bytes input that can be decoded according to the `commitment_type`. By making a request, the user / app / wallet is asking for the Gateway to make a commitment that is enforceable via the specified `slasher` contract.

        Each `commitment_type` has its own rules for how a Gateway maps a `CommitmentRequest.payload` to a `Commitment.payload`. The `Commitment.request_hash` field is used to bind the `Commitment` to a specific `CommitmentRequest`, however this is not required to correspond 1:1.

        The `SignedCommitment` is the response to the `CommitmentRequest`. It contains the `Commitment` and the ECDSA signature over the `Commitment`.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                jsonrpc:
                  type: string
                  enum: ["2.0"]
                  description: JSON-RPC version
                  example: "2.0"
                method:
                  type: string
                  enum: ["commitment_request"]
                  description: JSON-RPC method name
                  example: "commitment_request"
                params:
                  $ref: '#/components/schemas/CommitmentRequest'
                id:
                  oneOf:
                    - type: string
                    - type: integer
                  description: JSON-RPC request ID
                  example: 1
              required:
                - jsonrpc
                - method
                - params
                - id
            example:
              jsonrpc: "2.0"
              method: "commitmentRequest"
              params:
                commitment_type: 1
                payload: "eyJ0eF9kYXRhIjoiMHgxMjM0NS4uLiIsInNsb3QiOjEwMDAsImNoYWluX2lkIjoxfQ=="
                slasher: "0x1234567890123456789012345678901234567890"
              id: 1
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                    enum: ["2.0"]
                    description: JSON-RPC version
                    example: "2.0"
                  result:
                    $ref: '#/components/schemas/SignedCommitment'
                  id:
                    oneOf:
                      - type: string
                      - type: integer
                    description: JSON-RPC request ID
                    example: 1
                required:
                  - jsonrpc
                  - result
                  - id
              example:
                jsonrpc: "2.0"
                result:
                  commitment:
                    commitment_type: 1
                    payload: ""
                    request_hash: "0x1234567890123456789012345678901234567890000000000000000000000000"
                    slasher: "0x1234567890123456789012345678901234567890"
                  signature: "0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef1b"
                id: 1
        "400":
          description: "Bad Request - Invalid commitment request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                    enum: ["2.0"]
                    description: JSON-RPC version
                    example: "2.0"
                  error:
                    type: object
                    properties:
                      code:
                        type: integer
                        description: JSON-RPC error code
                        example: -32602
                      message:
                        type: string
                        description: JSON-RPC error message
                        example: "Invalid params"
                  id:
                    oneOf:
                      - type: string
                      - type: integer
                    description: JSON-RPC request ID
                    example: 1
                required:
                  - jsonrpc
                  - error
                  - id
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                    enum: ["2.0"]
                    description: JSON-RPC version
                    example: "2.0"
                  error:
                    type: object
                    properties:
                      code:
                        type: integer
                        description: JSON-RPC error code
                        example: -32603
                      message:
                        type: string
                        description: JSON-RPC error message
                        example: "Internal error"
                  id:
                    oneOf:
                      - type: string
                      - type: integer
                    description: JSON-RPC request ID
                    example: 1
                required:
                  - jsonrpc
                  - error
                  - id
  /commitmentResult:
    post:
      operationId: "commitmentResult"
      tags:
        - Commitments API
      summary: "Request an old SignedCommitment"
      description: |
        JSON-RPC endpoint for retrieving a previously signed commitment.
        
        When supplied with a valid `request_hash`, this endpoint responds with the `SignedCommitment` object containing the same `SignedCommitment.Commitment.request_hash`.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                jsonrpc:
                  type: string
                  enum: ["2.0"]
                  description: JSON-RPC version
                  example: "2.0"
                method:
                  type: string
                  enum: ["commitmentResult"]
                  description: JSON-RPC method name
                  example: "commitmentResult"
                params:
                  type: object
                  properties:
                    request_hash:
                      type: string
                      format: bytes32
                      description: Hash of the CommitmentRequest to retrieve
                      example: "0x1234567890123456789012345678901234567890000000000000000000000000"
                  required:
                    - request_hash
                id:
                  oneOf:
                    - type: string
                    - type: integer
                  description: JSON-RPC request ID
                  example: 1
              required:
                - jsonrpc
                - method
                - params
                - id
            example:
              jsonrpc: "2.0"
              method: "commitmentResult"
              params:
                request_hash: "0x1234567890123456789012345678901234567890000000000000000000000000"
              id: 1
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                    enum: ["2.0"]
                    description: JSON-RPC version
                    example: "2.0"
                  result:
                    $ref: '#/components/schemas/SignedCommitment'
                  id:
                    oneOf:
                      - type: string
                      - type: integer
                    description: JSON-RPC request ID
                    example: 1
                required:
                  - jsonrpc
                  - result
                  - id
              example:
                jsonrpc: "2.0"
                result:
                  commitment:
                    commitment_type: 1
                    payload: ""
                    request_hash: "0x1234567890123456789012345678901234567890000000000000000000000000"
                    slasher: "0x1234567890123456789012345678901234567890"
                  signature: "0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef1b"
                id: 1
        "404":
          description: "Not Found - No commitment found for the given request hash"
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                    enum: ["2.0"]
                    description: JSON-RPC version
                    example: "2.0"
                  error:
                    type: object
                    properties:
                      code:
                        type: integer
                        description: JSON-RPC error code
                        example: -32601
                      message:
                        type: string
                        description: JSON-RPC error message
                        example: "Commitment not found"
                  id:
                    oneOf:
                      - type: string
                      - type: integer
                    description: JSON-RPC request ID
                    example: 1
                required:
                  - jsonrpc
                  - error
                  - id
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                    enum: ["2.0"]
                    description: JSON-RPC version
                    example: "2.0"
                  error:
                    type: object
                    properties:
                      code:
                        type: integer
                        description: JSON-RPC error code
                        example: -32603
                      message:
                        type: string
                        description: JSON-RPC error message
                        example: "Internal error"
                  id:
                    oneOf:
                      - type: string
                      - type: integer
                    description: JSON-RPC request ID
                    example: 1
                required:
                  - jsonrpc
                  - error
                  - id
  /slots:
    post:
      operationId: "slots"
      tags:
        - Commitments API
      summary: "Get Gateway information for upcoming slots"
      description: |
        JSON-RPC endpoint for retrieving Gateway information for upcoming slots.
        
        When called, the Gateway returns a `SlotInfo` for each upcoming L1 slot in the current or upcoming epoch. 
        Each `SlotInfo` contains a list of `Offering` objects which specify the types of commitments they offer for a given chain, e.g., inclusion preconfs for the L1.
        
        It should be noted that this endpoint does not provide guarantees that the Gateway is actually capable of providing these. 
        For example, for proposer commitments that require delegations, the user should also consult the Constraints API to verify if the Gateway received delegations for the slot in question.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                jsonrpc:
                  type: string
                  enum: ["2.0"]
                  description: JSON-RPC version
                  example: "2.0"
                method:
                  type: string
                  enum: ["slots"]
                  description: JSON-RPC method name
                  example: "slots"
                params:
                  type: object
                  description: No parameters required for this method
                  example: {}
                id:
                  oneOf:
                    - type: string
                    - type: integer
                  description: JSON-RPC request ID
                  example: 1
              required:
                - jsonrpc
                - method
                - params
                - id
            example:
              jsonrpc: "2.0"
              method: "slots"
              params: {}
              id: 1
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                    enum: ["2.0"]
                    description: JSON-RPC version
                    example: "2.0"
                  result:
                    $ref: '#/components/schemas/SlotInfoResponse'
                  id:
                    oneOf:
                      - type: string
                      - type: integer
                    description: JSON-RPC request ID
                    example: 1
                required:
                  - jsonrpc
                  - result
                  - id
              example:
                jsonrpc: "2.0"
                result:
                  slots:
                    - slot: 1000
                      offerings:
                        - chain_id: 1
                          commitment_types: [1, 2]
                        - chain_id: 10
                          commitment_types: [1]
                    - slot: 1001
                      offerings:
                        - chain_id: 1
                          commitment_types: [1, 2]
                        - chain_id: 10
                          commitment_types: [1]
                id: 1
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                    enum: ["2.0"]
                    description: JSON-RPC version
                    example: "2.0"
                  error:
                    type: object
                    properties:
                      code:
                        type: integer
                        description: JSON-RPC error code
                        example: -32603
                      message:
                        type: string
                        description: JSON-RPC error message
                        example: "Internal error"
                  id:
                    oneOf:
                      - type: string
                      - type: integer
                    description: JSON-RPC request ID
                    example: 1
                required:
                  - jsonrpc
                  - error
                  - id
  /fee:
    post:
      operationId: "fee"
      tags:
        - Commitments API
      summary: "Get fee information for a commitment request"
      description: |
        JSON-RPC endpoint for retrieving commitment fee information.
        
        Since each proposer commitment protocol may have differing pricing mechanisms, i.e., per-request or subscription based, 
        this endpoint is intentionally left generic. Users submit a `CommitmentRequest` and receive a `FeeInfo` object containing 
        opaque `payload` bytes and a `commitment_type` to decode the `payload` into protocol-specific pricing information.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                jsonrpc:
                  type: string
                  enum: ["2.0"]
                  description: JSON-RPC version
                  example: "2.0"
                method:
                  type: string
                  enum: ["fee"]
                  description: JSON-RPC method name
                  example: "fee"
                params:
                  $ref: '#/components/schemas/CommitmentRequest'
                id:
                  oneOf:
                    - type: string
                    - type: integer
                  description: JSON-RPC request ID
                  example: 1
              required:
                - jsonrpc
                - method
                - params
                - id
            example:
              jsonrpc: "2.0"
              method: "fee"
              params:
                commitment_type: 1
                payload: ""
                slasher: "0x1234567890123456789012345678901234567890"
              id: 1
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                    enum: ["2.0"]
                    description: JSON-RPC version
                    example: "2.0"
                  result:
                    $ref: '#/components/schemas/FeeInfo'
                  id:
                    oneOf:
                      - type: string
                      - type: integer
                    description: JSON-RPC request ID
                    example: 1
                required:
                  - jsonrpc
                  - result
                  - id
              example:
                jsonrpc: "2.0"
                result:
                  payload: ""
                  commitment_type: 1
                id: 1
        "400":
          description: "Bad Request - Invalid commitment request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                    enum: ["2.0"]
                    description: JSON-RPC version
                    example: "2.0"
                  error:
                    type: object
                    properties:
                      code:
                        type: integer
                        description: JSON-RPC error code
                        example: -32602
                      message:
                        type: string
                        description: JSON-RPC error message
                        example: "Invalid params"
                  id:
                    oneOf:
                      - type: string
                      - type: integer
                    description: JSON-RPC request ID
                    example: 1
                required:
                  - jsonrpc
                  - error
                  - id
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                    enum: ["2.0"]
                    description: JSON-RPC version
                    example: "2.0"
                  error:
                    type: object
                    properties:
                      code:
                        type: integer
                        description: JSON-RPC error code
                        example: -32603
                      message:
                        type: string
                        description: JSON-RPC error message
                        example: "Internal error"
                  id:
                    oneOf:
                      - type: string
                      - type: integer
                    description: JSON-RPC request ID
                    example: 1
                required:
                  - jsonrpc
                  - error
                  - id